// Main navigation panel component
import React from 'react';
import { useNavigate } from 'react-router-dom';
import { Home, Gift, Heart, MapPin, Camera, MessageSquare, Shield, LogOut } from 'lucide-react';
import { useAuth } from '@/hooks/useAuth';

interface NavItemProps {
  icon: React.ElementType;
  label: string;
  path: string;
  isActive: boolean;
  onClick: (path: string) => void;
}

const NavItem: React.FC<NavItemProps> = ({ icon: Icon, label, path, isActive, onClick }) => (
  <button 
    onClick={() => onClick(path)}
    className={`flex items-center w-full text-left px-4 py-3 rounded-lg transition-colors duration-200 ${isActive ? 'bg-wedding-gold text-black' : 'text-gray-300 hover:bg-white/10'}`}>
    <Icon className="w-5 h-5 mr-4" />
    <span className="font-semibold">{label}</span>
  </button>
);

interface MainNavigationProps {
  isOpen: boolean;
  onNavigate: (path: string) => void;
  activeRoute: string;
}

const MainNavigation: React.FC<MainNavigationProps> = ({ isOpen, onNavigate, activeRoute }) => {
  const { userRole, signOut } = useAuth();
  const navigate = useNavigate();
  const isAdmin = userRole?.role === 'admin' || userRole?.role === 'couple';

  const handleSignOut = async () => {
    await signOut();
    navigate('/auth');
  };

  const navItems = [
    { icon: Home, label: 'Home', path: '/' },
    { icon: Heart, label: 'Our Story', path: '/story' },
    { icon: MapPin, label: 'Venue', path: '/venue' },
    { icon: Camera, label: 'Gallery', path: '/gallery' },
    { icon: MessageSquare, label: 'Social', path: '/social' },
    { icon: Gift, label: 'Gifts', path: '/gifts' },
  ];

  if (isAdmin) {
    navItems.push({ icon: Shield, label: 'Admin', path: '/admin/dashboard' });
  }

  if (!isOpen) return null;

  return (
    <div className="fixed inset-0 bg-black/50 z-[101] backdrop-blur-sm">
      <div className={`fixed top-0 left-0 bottom-0 w-72 bg-black/80 border-r border-white/10 p-6 flex flex-col transform transition-transform duration-300 ease-in-out ${isOpen ? 'translate-x-0' : '-translate-x-full'}`}>
        <div className="flex-grow">
          <h2 className="text-2xl font-dolly text-white mb-8">Navigation</h2>
          <div className="space-y-2">
            {navItems.map(item => (
              <NavItem 
                key={item.path}
                {...item} 
                isActive={activeRoute === item.path}
                onClick={onNavigate}
              />
            ))}
          </div>
        </div>
        <div>
          <button 
            onClick={handleSignOut}
            className="flex items-center w-full text-left px-4 py-3 rounded-lg text-red-400 hover:bg-red-500/20 transition-colors duration-200">
            <LogOut className="w-5 h-5 mr-4" />
            <span className="font-semibold">Sign Out</span>
          </button>
        </div>
      </div>
    </div>
  );
};

export default MainNavigation;
