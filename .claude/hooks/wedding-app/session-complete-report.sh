#!/bin/bash
# Session complete report hook for wedding app
# Generates session summary report

set -euo pipefail

# Configuration
LOG_FILE="/tmp/wedding-app-hooks.log"
REPORT_DIR="/tmp/wedding-app-reports"
TIMESTAMP=$(date -Iseconds)

# Logging function
log() {
    echo "[$TIMESTAMP] SESSION-COMPLETE: $1" | tee -a "$LOG_FILE"
}

# Main report function
main() {
    local session_id="${1:-session-$(date +%s)}"
    
    log "Generating session completion report for: $session_id"
    
    # Create reports directory
    mkdir -p "$REPORT_DIR"
    
    # Generate report file
    local report_file="$REPORT_DIR/session-${session_id}-$(date +%Y%m%d-%H%M%S).md"
    
    cat > "$report_file" << EOF
# Wedding App Session Report

**Session ID**: $session_id  
**Completed**: $(date)  
**Duration**: Calculated from logs  

## Summary

### Files Modified
$(if [[ -f "$LOG_FILE" ]]; then grep "POST-EDIT-QUALITY" "$LOG_FILE" | tail -10 || echo "No file modifications detected"; else echo "No log file found"; fi)

### Commands Executed
$(if [[ -f "$LOG_FILE" ]]; then grep "PRE-COMMAND-SECURITY" "$LOG_FILE" | tail -10 || echo "No commands detected"; else echo "No log file found"; fi)

### Quality Checks
$(if [[ -f "$LOG_FILE" ]]; then grep -c "quality check completed" "$LOG_FILE" || echo "0"; else echo "0"; fi) files passed quality validation

### Security Validations
$(if [[ -f "$LOG_FILE" ]]; then grep -c "security validation passed" "$LOG_FILE" || echo "0"; else echo "0"; fi) commands passed security validation

## Recommendations

- Review any WARNING messages in the logs
- Ensure all components follow Nuptily design system
- Verify TypeScript compilation
- Check bundle size if build was performed

## Next Steps

- Run \`npm run build\` to verify production build
- Execute \`npm run test\` for quality assurance
- Review Storybook for component documentation

---
*Generated by Wedding App Hooks System v1.0.0*
EOF
    
    log "Session report generated: $report_file"
    
    # Clean up old reports (keep last 7 days)
    find "$REPORT_DIR" -name "session-*.md" -mtime +7 -delete 2>/dev/null || true
    
    # Clean up old agent locks
    find "/tmp/wedding-app-agents" -name "*.lock" -mmin +60 -delete 2>/dev/null || true
    
    log "Session cleanup completed"
    exit 0
}

# Run main function with all arguments
main "$@"