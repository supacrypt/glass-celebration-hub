name: Deploy Nuptily Wedding App

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

env:
  NODE_VERSION: '18'

jobs:
  # Test and build
  test-and-build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run type checking
      run: npm run type-check
      
    - name: Run linting
      run: npm run lint
      
    - name: Run tests
      run: npm run test
      
    - name: Build application
      run: npm run build
      env:
        VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
        VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
        VITE_APP_URL: ${{ secrets.VITE_APP_URL }}
        VITE_CDN_URL: ${{ secrets.VITE_CDN_URL }}
        VITE_GOOGLE_ANALYTICS_ID: ${{ secrets.VITE_GOOGLE_ANALYTICS_ID }}
        VITE_SENTRY_DSN: ${{ secrets.VITE_SENTRY_DSN }}
        VITE_ENABLE_PERFORMANCE_MONITOR: 'true'
        VITE_ENABLE_ADMIN_DASHBOARD: 'true'
        VITE_ENABLE_VIDEO_CALLING: 'true'
        VITE_ENABLE_REAL_TIME_CHAT: 'true'
        VITE_ENABLE_PHOTO_UPLOADS: 'true'
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: dist/
        
  # Deploy to staging (for PRs)
  deploy-staging:
    if: github.event_name == 'pull_request'
    needs: test-and-build
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-files
        path: dist/
        
    - name: Deploy to staging
      run: |
        echo "üöÄ Deploying to staging environment..."
        # Add your staging deployment commands here
        # Examples:
        # - Deploy to Vercel staging
        # - Deploy to Netlify staging
        # - Deploy to AWS S3 staging bucket
        # - Deploy to Firebase hosting staging
        
    - name: Comment PR with staging URL
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'üöÄ Staging deployment ready! View at: https://staging.nuptul.com'
          })
          
  # Deploy to production (for main branch)
  deploy-production:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    needs: test-and-build
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-files
        path: dist/
        
    - name: Setup database migration
      run: |
        echo "üóÑÔ∏è  Running database migrations..."
        # Add database migration commands here
        # Examples:
        # - Run Supabase migrations
        # - Update database schema
        # - Seed production data
        
    - name: Deploy to production
      run: |
        echo "üöÄ Deploying to production environment..."
        # Add your production deployment commands here
        # Examples:
        # - Deploy to Vercel production
        # - Deploy to Netlify production
        # - Deploy to AWS S3 production bucket
        # - Deploy to Firebase hosting production
        
    - name: Setup monitoring
      run: |
        echo "üìä Setting up monitoring..."
        # Add monitoring setup commands here
        # Examples:
        # - Configure Sentry releases
        # - Setup uptime monitoring
        # - Configure performance monitoring
        
    - name: Notify deployment success
      run: |
        echo "‚úÖ Production deployment successful!"
        # Add notification commands here
        # Examples:
        # - Send Slack notification
        # - Send email notification
        # - Update status page
        
  # Setup Supabase (for initial deployment)
  setup-supabase:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Setup Supabase environment
      run: |
        echo "üèóÔ∏è  Setting up Supabase environment..."
        node setup_production_environment.js
      env:
        VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
        VITE_SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.VITE_SUPABASE_SERVICE_ROLE_KEY }}
        
    - name: Run database migrations
      run: |
        echo "üóÑÔ∏è  Running database migrations..."
        # Add migration commands here
        
    - name: Setup storage buckets
      run: |
        echo "üì¶ Setting up storage buckets..."
        # Add storage setup commands here